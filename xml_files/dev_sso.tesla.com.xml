<?xml version="1.0"?>
<!DOCTYPE items [
<!ELEMENT items (item*)>
<!ATTLIST items burpVersion CDATA "">
<!ATTLIST items exportTime CDATA "">
<!ELEMENT item (time, url, host, port, protocol, method, path, extension, request, status, responselength, mimetype, response, comment)>
<!ELEMENT time (#PCDATA)>
<!ELEMENT url (#PCDATA)>
<!ELEMENT host (#PCDATA)>
<!ATTLIST host ip CDATA "">
<!ELEMENT port (#PCDATA)>
<!ELEMENT protocol (#PCDATA)>
<!ELEMENT method (#PCDATA)>
<!ELEMENT path (#PCDATA)>
<!ELEMENT extension (#PCDATA)>
<!ELEMENT request (#PCDATA)>
<!ATTLIST request base64 (true|false) "false">
<!ELEMENT status (#PCDATA)>
<!ELEMENT responselength (#PCDATA)>
<!ELEMENT mimetype (#PCDATA)>
<!ELEMENT response (#PCDATA)>
<!ATTLIST response base64 (true|false) "false">
<!ELEMENT comment (#PCDATA)>
]>
<items burpVersion="2020.9.1" exportTime="Fri Feb 05 15:19:09 GMT 2021">
  <item>
    <time>Fri Feb 05 15:18:56 GMT 2021</time>
    <url><![CDATA[https://sso-dev.tesla.com/adfs/ls/?wa=wsignin1.0&wtrealm=urn%3asharepoint%3amyappsprod&wctx=https://127.0.0&client-request-id=https://127.0.0.]]></url>
    <host ip="104.79.236.53">sso-dev.tesla.com</host>
    <port>443</port>
    <protocol>https</protocol>
    <method><![CDATA[GET]]></method>
    <path><![CDATA[/adfs/ls/?wa=wsignin1.0&wtrealm=urn%3asharepoint%3amyappsprod&wctx=https://127.0.0&client-request-id=https://127.0.0.]]></path>
    <extension>null</extension>
    <request base64="true"><![CDATA[R0VUIC9hZGZzL2xzLz93YT13c2lnbmluMS4wJnd0cmVhbG09dXJuJTNhc2hhcmVwb2ludCUzYW15YXBwc3Byb2Qmd2N0eD1odHRwczovLzEyNy4wLjAmY2xpZW50LXJlcXVlc3QtaWQ9aHR0cHM6Ly8xMjcuMC4wLiBIVFRQLzEuMQ0KSG9zdDogc3NvLWRldi50ZXNsYS5jb20NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IHJ2Ojc4LjApIEdlY2tvLzIwMTAwMTAxIEZpcmVmb3gvNzguMA0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS93ZWJwLCovKjtxPTAuOA0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUyxlbjtxPTAuNQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpETlQ6IDENCkNvbm5lY3Rpb246IGNsb3NlDQpDb29raWU6IGFrX2Jtc2M9QUExMDk4QzY2NjgwQUU0QkUyNTc1RUEzRUI5NkE1MzY0OEY2OTc5NkQ1NEEwMDAwNEUzNzFENjBFQkI1NDQ1NH5wbHNGbmJHNDZsOTZielBWejBrZDNqV1ZOUi9TK3MrRW1FNXBHYzZ3ckdqNW0yOGFVdlg4RStOTEMxMkt3NWxORzdobXY4K0Y2ekY5VURoNE4rSkNhRmhwZ1pSbFgra1laY1FpV1pBNEQ0bzZwNDV3ZUsrQXlXODN6RWVrcmZ0V2lieGhqMld0blViL1M1UjZxcHdtVkpETVVkekRzUWxBSW43Rll5YkI1ZlhzcXQ2bWlqZUkvbmpUSTMvbEdEai9ybmplMWFPR3d3ZmNXSWNwUHRPNnltaFYvVzVwZ3ZSTXdwVFJRSFFPU1plMDNFZmc2NUtFYXdUa0V6aHZKYkVNU29MdTMvdXlmajFKRUFSRDc0NXZabzJRPT07IGJtX3N2PUVDQTc1MzEwRTY1RkI4NTIyMUI2MEFFOUUxNUIwMTVBfnhmcThjYTdUbjZjcUdkNDRLelU5c0hnT2pBQXJjcnFVSVd2bytrTmdyT1JQbW1qODRiYlZnMUFScm9yTTFTcGFLYkFzbC9rZjI3TnEwUE15YUE1UlFjTlZnaTRkL2lIejIrTk1EejRTTmE1dzdNSXgrQXNyamNLNFRwdVBUM29LT2JUUVY4a2ZTMFFZbFYzZGFmejdLSnl1UUVKUEFpc2RSb2luNW5mZWRiVT0NClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1HUEM6IDENCg0K]]></request>
    <status>200</status>
    <responselength>18282</responselength>
    <mimetype>HTML</mimetype>
    <response base64="true"><![CDATA[]]></response>
    <comment></comment>
  </item>
</items>
